#!/usr/bin/env php
<?php

declare(strict_types=1);

use Symfony\Component\Console\Extended\OptionAwareApplication;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\HttpClient\HttpClient;
use VPNDetector\Builder\IPAddressResolver\IPAddressResolvers;
use VPNDetector\Builder\IPAddressResolverFactory;
use VPNDetector\Builder\VPNDetectorBuilder;
use VPNDetector\Command\VPNDetectorCommand;
use VPNDetector\IPAddressResolver;

$autoloadFiles = [
    $GLOBALS['_composer_autoload_path'] ?? null, // composer var
    __DIR__ . '/../../../autoload.php', // composer bin
    __DIR__ . '/../vendor/autoload.php', // local
];

foreach ($autoloadFiles as $autoloadFile) {
    if ($autoloadFile !== null && file_exists($autoloadFile)) {
        require $autoloadFile;
    }
}

$dotenv = new Dotenv();
$dotenv->loadEnv('.env');

$resolverOptions = [
    IPAddressResolvers::LIVEBOX => [
        IPAddressResolver::URL_PARAM      => $_ENV['LIVEBOX_URL'] ?? null,
        IPAddressResolver::USER_PARAM     => $_ENV['LIVEBOX_USR'] ?? null,
        IPAddressResolver::PASSWORD_PARAM => $_ENV['LIVEBOX_PWD'] ?? null,
    ],
];

$httpClient = HttpClient::create();
$ipResolverFactory = IPAddressResolverFactory::create($httpClient, $resolverOptions);
$vpnDetectorBuilder = (new VPNDetectorBuilder())
    ->withLocalIPAddressResolver($ipResolverFactory->build(IPAddressResolvers::IPIFY)->build())
    ->withRemoteIPAddressResolver($ipResolverFactory->build(IPAddressResolvers::LIVEBOX)->build());

$app = new OptionAwareApplication('VPNDetector', '0.1.0');
$app->add(new VPNDetectorCommand($vpnDetectorBuilder->build()));
$app->setDefaultCommand(VPNDetectorCommand::NAME, true);
$app->run();
